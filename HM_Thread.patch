Index: src/com/softserve/edu/thread/MyRun.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/com/softserve/edu/thread/MyRun.java	(date 1582887508132)
+++ src/com/softserve/edu/thread/MyRun.java	(date 1582887508132)
@@ -0,0 +1,7 @@
+package com.softserve.edu.thread;
+
+public class MyRun  {
+    public void Run(){
+
+    }
+}
Index: src/com/softserve/edu/thread/ThreadAppl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/com/softserve/edu/thread/ThreadAppl.java	(revision de382ffdd7f5fe71073e4a8c05cb67b8c3528c14)
+++ src/com/softserve/edu/thread/ThreadAppl.java	(date 1582891509254)
@@ -4,11 +4,55 @@
  *      Create a thread «one», which would start the thread «two»,
  *      which has to output its number («Thread number two») 3 times and create thread «three»,
  *      which would to output message «Thread number three» 5 times.
-*/
- 
+ */
+
 
 public class ThreadAppl {
+    public static final Object synch = new Object();
+
     public static void main(String[] args) {
-        Thread
+
+
+        Thread t2 = new Thread() {
+            public void run() {
+                for (int i = 0; i < 3; i++) {
+                    System.out.println("working thread \"two\"");
+                }
+                System.out.println("create thread «three»");
+                Thread t3 = new Thread() {
+                    public void run() {
+                        for (int i = 0; i < 5; i++) {
+                            System.out.println("working thread \"three\"");
+                        }
+                        System.out.println("Mission completed ");
+                    }
+
+                };
+                t3.start();
+
+            }
+
+        };
+
+
+        Thread t1 = new Thread() {
+            public void run() {
+                System.out.println("working thread \"one\"");
+                t2.start();
+                System.out.println("Start the thread \"two\"");
+            }
+        };
+
+
+        try {
+            t1.start();
+            t1.join();
+        } catch (InterruptedException e) {
+            e.printStackTrace();
+        }
+
+
     }
+
 }
+
